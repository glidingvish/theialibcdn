{"version":3,"file":"vendors-node_modules_theia_editor_lib_browser_editor-menu_js.js","mappings":"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","sources":["webpack:///../node_modules/@theia/editor/src/browser/editor-command.ts?","webpack:///../node_modules/@theia/editor/src/browser/editor-menu.ts?","webpack:///../node_modules/@theia/editor/src/browser/editor-preferences.ts?"],"sourcesContent":["// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, optional, postConstruct } from '@theia/core/shared/inversify';\nimport { CommandContribution, CommandRegistry, Command } from '@theia/core/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommonCommands, PreferenceService, LabelProvider, ApplicationShell, QuickInputService, QuickPickValue, QuickPickItemOrSeparator } from '@theia/core/lib/browser';\nimport { EditorManager } from './editor-manager';\nimport { EditorPreferences } from './editor-preferences';\nimport { ResourceProvider, MessageService } from '@theia/core';\nimport { LanguageService, Language } from '@theia/core/lib/browser/language-service';\nimport { SUPPORTED_ENCODINGS } from '@theia/core/lib/browser/supported-encodings';\nimport { EncodingMode } from './editor';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport namespace EditorCommands {\n\n    const EDITOR_CATEGORY = 'Editor';\n    const EDITOR_CATEGORY_KEY = nls.getDefaultKey(EDITOR_CATEGORY);\n\n    export const GOTO_LINE_COLUMN = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.gotoLine',\n        label: 'Go to Line/Column'\n    });\n\n    /**\n     * Show editor references\n     */\n    export const SHOW_REFERENCES: Command = {\n        id: 'textEditor.commands.showReferences'\n    };\n    /**\n     * Change indentation configuration (i.e., indent using tabs / spaces, and how many spaces per tab)\n     */\n    export const CONFIG_INDENTATION: Command = {\n        id: 'textEditor.commands.configIndentation'\n    };\n\n    export const CONFIG_EOL = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.configEol',\n        category: EDITOR_CATEGORY,\n        label: 'Change End of Line Sequence'\n    });\n\n    export const INDENT_USING_SPACES = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.indentUsingSpaces',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Spaces'\n    });\n    export const INDENT_USING_TABS = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.indentUsingTabs',\n        category: EDITOR_CATEGORY,\n        label: 'Indent Using Tabs'\n    });\n    export const CHANGE_LANGUAGE = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.change.language',\n        category: EDITOR_CATEGORY,\n        label: 'Change Language Mode'\n    });\n    export const CHANGE_ENCODING = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.change.encoding',\n        category: EDITOR_CATEGORY,\n        label: 'Change File Encoding'\n    });\n    export const REVERT_EDITOR = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.files.revert',\n        category: CommonCommands.FILE_CATEGORY,\n        label: 'Revert File',\n    });\n    export const REVERT_AND_CLOSE = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.revertAndCloseActiveEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Revert and Close Editor'\n    });\n\n    /**\n     * Command for going back to the last editor navigation location.\n     */\n    export const GO_BACK = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.back',\n        category: EDITOR_CATEGORY,\n        label: 'Go Back'\n    });\n    /**\n     * Command for going to the forthcoming editor navigation location.\n     */\n    export const GO_FORWARD = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.forward',\n        category: EDITOR_CATEGORY,\n        label: 'Go Forward'\n    });\n    /**\n     * Command that reveals the last text edit location, if any.\n     */\n    export const GO_LAST_EDIT = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.go.lastEdit',\n        category: EDITOR_CATEGORY,\n        label: 'Go to Last Edit Location'\n    });\n    /**\n     * Command that clears the editor navigation history.\n     */\n    export const CLEAR_EDITOR_HISTORY = Command.toDefaultLocalizedCommand({\n        id: 'textEditor.commands.clear.history',\n        category: EDITOR_CATEGORY,\n        label: 'Clear Editor History'\n    });\n    /**\n     * Command that displays all editors that are currently opened.\n     */\n    export const SHOW_ALL_OPENED_EDITORS = Command.toLocalizedCommand({\n        id: 'workbench.action.showAllEditors',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Show All Opened Editors'\n    }, 'theia/editor/showAllEditors', EDITOR_CATEGORY_KEY);\n    /**\n     * Command that toggles the minimap.\n     */\n    export const TOGGLE_MINIMAP = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleMinimap',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Minimap'\n    });\n    /**\n     * Command that toggles the rendering of whitespace characters in the editor.\n     */\n    export const TOGGLE_RENDER_WHITESPACE = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleRenderWhitespace',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Render Whitespace'\n    });\n    /**\n     * Command that toggles the word wrap.\n     */\n    export const TOGGLE_WORD_WRAP = Command.toDefaultLocalizedCommand({\n        id: 'editor.action.toggleWordWrap',\n        label: 'View: Toggle Word Wrap'\n    });\n    /**\n     * Command that toggles sticky scroll.\n     */\n    export const TOGGLE_STICKY_SCROLL = Command.toLocalizedCommand({\n        id: 'editor.action.toggleStickyScroll',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Toggle Sticky Scroll',\n    }, 'theia/editor/toggleStickyScroll', EDITOR_CATEGORY_KEY);\n    /**\n     * Command that re-opens the last closed editor.\n     */\n    export const REOPEN_CLOSED_EDITOR = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.reopenClosedEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Reopen Closed Editor'\n    });\n    /**\n     * Opens a second instance of the current editor, splitting the view in the direction specified.\n     */\n    export const SPLIT_EDITOR_RIGHT = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorRight',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Right'\n    });\n    export const SPLIT_EDITOR_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorDown',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Down'\n    });\n    export const SPLIT_EDITOR_UP = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorUp',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Up'\n    });\n    export const SPLIT_EDITOR_LEFT = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorLeft',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Left'\n    });\n    /**\n     * Default horizontal split: right.\n     */\n    export const SPLIT_EDITOR_HORIZONTAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditor',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor'\n    });\n    /**\n     * Default vertical split: down.\n     */\n    export const SPLIT_EDITOR_VERTICAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.splitEditorOrthogonal',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Split Editor Orthogonal'\n    });\n}\n\n@injectable()\nexport class EditorCommandContribution implements CommandContribution {\n\n    public static readonly AUTOSAVE_PREFERENCE: string = 'files.autoSave';\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    @inject(PreferenceService)\n    protected readonly preferencesService: PreferenceService;\n\n    @inject(EditorPreferences)\n    protected readonly editorPreferences: EditorPreferences;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(LanguageService)\n    protected readonly languages: LanguageService;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(ResourceProvider)\n    protected readonly resourceProvider: ResourceProvider;\n\n    @postConstruct()\n    protected init(): void {\n        this.editorPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName === 'files.autoSave' && e.newValue !== 'off') {\n                this.shell.saveAll();\n            }\n        });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(EditorCommands.SHOW_REFERENCES);\n        registry.registerCommand(EditorCommands.CONFIG_INDENTATION);\n        registry.registerCommand(EditorCommands.CONFIG_EOL);\n        registry.registerCommand(EditorCommands.INDENT_USING_SPACES);\n        registry.registerCommand(EditorCommands.INDENT_USING_TABS);\n        registry.registerCommand(EditorCommands.REVERT_EDITOR);\n        registry.registerCommand(EditorCommands.REVERT_AND_CLOSE);\n        registry.registerCommand(EditorCommands.CHANGE_LANGUAGE, {\n            isEnabled: () => this.canConfigureLanguage(),\n            isVisible: () => this.canConfigureLanguage(),\n            execute: () => this.configureLanguage()\n        });\n        registry.registerCommand(EditorCommands.CHANGE_ENCODING, {\n            isEnabled: () => this.canConfigureEncoding(),\n            isVisible: () => this.canConfigureEncoding(),\n            execute: () => this.configureEncoding()\n        });\n\n        registry.registerCommand(EditorCommands.GO_BACK);\n        registry.registerCommand(EditorCommands.GO_FORWARD);\n        registry.registerCommand(EditorCommands.GO_LAST_EDIT);\n        registry.registerCommand(EditorCommands.CLEAR_EDITOR_HISTORY);\n        registry.registerCommand(EditorCommands.TOGGLE_MINIMAP);\n        registry.registerCommand(EditorCommands.TOGGLE_RENDER_WHITESPACE);\n        registry.registerCommand(EditorCommands.TOGGLE_WORD_WRAP);\n        registry.registerCommand(EditorCommands.TOGGLE_STICKY_SCROLL);\n        registry.registerCommand(EditorCommands.REOPEN_CLOSED_EDITOR);\n\n        registry.registerCommand(CommonCommands.AUTO_SAVE, {\n            isToggled: () => this.isAutoSaveOn(),\n            execute: () => this.toggleAutoSave()\n        });\n    }\n\n    protected canConfigureLanguage(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor && !!this.languages.languages;\n    }\n    protected async configureLanguage(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor || !this.languages.languages) {\n            return;\n        }\n        const current = editor.document.languageId;\n        const items: Array<QuickPickValue<'autoDetect' | Language> | QuickPickItemOrSeparator> = [\n            { label: nls.localizeByDefault('Auto Detect'), value: 'autoDetect' },\n            { type: 'separator', label: nls.localizeByDefault('languages (identifier)') },\n            ... (this.languages.languages.map(language => this.toQuickPickLanguage(language, current))).sort((e, e2) => e.label.localeCompare(e2.label))\n        ];\n        const selectedMode = await this.quickInputService?.showQuickPick(items, { placeholder: nls.localizeByDefault('Select Language Mode') });\n        if (selectedMode && ('value' in selectedMode)) {\n            if (selectedMode.value === 'autoDetect') {\n                editor.detectLanguage();\n            } else if (selectedMode.value) {\n                editor.setLanguage(selectedMode.value.id);\n            }\n        }\n    }\n\n    protected canConfigureEncoding(): boolean {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        return !!editor;\n    }\n    protected async configureEncoding(): Promise<void> {\n        const widget = this.editorManager.currentEditor;\n        const editor = widget && widget.editor;\n        if (!editor) {\n            return;\n        }\n        const reopenWithEncodingPick = { label: nls.localizeByDefault('Reopen with Encoding'), value: 'reopen' };\n        const saveWithEncodingPick = { label: nls.localizeByDefault('Save with Encoding'), value: 'save' };\n        const actionItems: QuickPickValue<string>[] = [\n            reopenWithEncodingPick,\n            saveWithEncodingPick\n        ];\n        const selectedEncoding = await this.quickInputService?.showQuickPick(actionItems, { placeholder: nls.localizeByDefault('Select Action') });\n        if (!selectedEncoding) {\n            return;\n        }\n        const isReopenWithEncoding = (selectedEncoding.value === reopenWithEncodingPick.value);\n\n        const configuredEncoding = this.preferencesService.get<string>('files.encoding', 'utf8', editor.uri.toString());\n\n        const resource = await this.resourceProvider(editor.uri);\n        const guessedEncoding = resource.guessEncoding ? await resource.guessEncoding() : undefined;\n        resource.dispose();\n\n        const encodingItems: QuickPickValue<{ id: string, description: string }>[] = Object.keys(SUPPORTED_ENCODINGS)\n            .sort((k1, k2) => {\n                if (k1 === configuredEncoding) {\n                    return -1;\n                } else if (k2 === configuredEncoding) {\n                    return 1;\n                }\n                return SUPPORTED_ENCODINGS[k1].order - SUPPORTED_ENCODINGS[k2].order;\n            })\n            .filter(k => {\n                if (k === guessedEncoding && guessedEncoding !== configuredEncoding) {\n                    return false; // do not show encoding if it is the guessed encoding that does not match the configured\n                }\n\n                return !isReopenWithEncoding || !SUPPORTED_ENCODINGS[k].encodeOnly; // hide those that can only be used for encoding if we are about to decode\n            })\n            .map(key => ({ label: SUPPORTED_ENCODINGS[key].labelLong, value: { id: key, description: key } }));\n\n        // Insert guessed encoding\n        if (guessedEncoding && configuredEncoding !== guessedEncoding && SUPPORTED_ENCODINGS[guessedEncoding]) {\n            encodingItems.unshift({\n                label: `${nls.localizeByDefault('Guessed from content')}: ${SUPPORTED_ENCODINGS[guessedEncoding].labelLong}`,\n                value: { id: guessedEncoding, description: guessedEncoding }\n            });\n        }\n        const selectedFileEncoding = await this.quickInputService?.showQuickPick<QuickPickValue<{ id: string, description: string }>>(encodingItems, {\n            placeholder: isReopenWithEncoding ?\n                nls.localizeByDefault('Select File Encoding to Reopen File') :\n                nls.localizeByDefault('Select File Encoding to Save with')\n        });\n\n        if (!selectedFileEncoding) {\n            return;\n        }\n        if (editor.document.dirty && isReopenWithEncoding) {\n            this.messageService.info(nls.localize('theia/editor/dirtyEncoding', 'The file is dirty. Please save it first before reopening it with another encoding.'));\n            return;\n        } else if (selectedFileEncoding.value) {\n            editor.setEncoding(selectedFileEncoding.value.id, isReopenWithEncoding ? EncodingMode.Decode : EncodingMode.Encode);\n        }\n    }\n\n    protected toQuickPickLanguage(value: Language, current: string): QuickPickValue<Language> {\n        const languageUri = this.toLanguageUri(value);\n        const icon = this.labelProvider.getIcon(languageUri);\n        const iconClasses = icon !== '' ? [icon + ' file-icon'] : undefined;\n        const configured = current === value.id;\n        return {\n            value,\n            label: value.name,\n            description: nls.localizeByDefault(`({0})${configured ? ' - Configured Language' : ''}`, value.id),\n            iconClasses\n        };\n    }\n    protected toLanguageUri(language: Language): URI {\n        const extension = language.extensions.values().next();\n        if (extension.value) {\n            return new URI('file:///' + extension.value);\n        }\n        const filename = language.filenames.values().next();\n        if (filename.value) {\n            return new URI('file:///' + filename.value);\n        }\n        return new URI('file:///.txt');\n    }\n\n    protected isAutoSaveOn(): boolean {\n        const autoSave = this.preferencesService.get(EditorCommandContribution.AUTOSAVE_PREFERENCE);\n        return autoSave !== 'off';\n    }\n\n    protected async toggleAutoSave(): Promise<void> {\n        this.preferencesService.updateValue(EditorCommandContribution.AUTOSAVE_PREFERENCE, this.isAutoSaveOn() ? 'off' : 'afterDelay');\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { MenuContribution, MenuModelRegistry, MenuPath, MAIN_MENU_BAR } from '@theia/core';\nimport { CommonCommands, CommonMenus } from '@theia/core/lib/browser';\nimport { EditorCommands } from './editor-command';\nimport { nls } from '@theia/core/lib/common/nls';\n\nexport const EDITOR_CONTEXT_MENU: MenuPath = ['editor_context_menu'];\n\n/**\n * Editor context menu default groups should be aligned\n * with VS Code default groups: https://code.visualstudio.com/api/references/contribution-points#contributes.menus\n */\nexport namespace EditorContextMenu {\n    export const NAVIGATION = [...EDITOR_CONTEXT_MENU, 'navigation'];\n    export const MODIFICATION = [...EDITOR_CONTEXT_MENU, '1_modification'];\n    export const CUT_COPY_PASTE = [...EDITOR_CONTEXT_MENU, '9_cutcopypaste'];\n    export const COMMANDS = [...EDITOR_CONTEXT_MENU, 'z_commands'];\n    export const UNDO_REDO = [...EDITOR_CONTEXT_MENU, '1_undo'];\n}\n\nexport namespace EditorMainMenu {\n\n    /**\n     * The main `Go` menu item.\n     */\n    export const GO = [...MAIN_MENU_BAR, '5_go'];\n\n    /**\n     * Navigation menu group in the `Go` main-menu.\n     */\n    export const NAVIGATION_GROUP = [...GO, '1_navigation_group'];\n\n    /**\n     * Context management group in the `Go` main menu: Pane and editor switching commands.\n     */\n    export const CONTEXT_GROUP = [...GO, '1.1_context_group'];\n\n    /**\n     * Submenu for switching panes in the main area.\n     */\n    export const PANE_GROUP = [...CONTEXT_GROUP, '2_pane_group'];\n    export const BY_NUMBER = [...EditorMainMenu.PANE_GROUP, '1_by_number'];\n    export const NEXT_PREVIOUS = [...EditorMainMenu.PANE_GROUP, '2_by_location'];\n\n    /**\n     * Workspace menu group in the `Go` main-menu.\n     */\n    export const WORKSPACE_GROUP = [...GO, '2_workspace_group'];\n\n    /**\n     * Language features menu group in the `Go` main-menu.\n     */\n    export const LANGUAGE_FEATURES_GROUP = [...GO, '3_language_features_group'];\n\n    /**\n     * Location menu group in the `Go` main-menu.\n     */\n    export const LOCATION_GROUP = [...GO, '4_locations'];\n\n}\n\n@injectable()\nexport class EditorMenuContribution implements MenuContribution {\n\n    registerMenus(registry: MenuModelRegistry): void {\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.UNDO.id\n        });\n        registry.registerMenuAction(EditorContextMenu.UNDO_REDO, {\n            commandId: CommonCommands.REDO.id\n        });\n\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.CUT.id,\n            order: '0'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.COPY.id,\n            order: '1'\n        });\n        registry.registerMenuAction(EditorContextMenu.CUT_COPY_PASTE, {\n            commandId: CommonCommands.PASTE.id,\n            order: '2'\n        });\n\n        // Editor navigation. Go > Back and Go > Forward.\n        registry.registerSubmenu(EditorMainMenu.GO, nls.localizeByDefault('Go'));\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_BACK.id,\n            label: EditorCommands.GO_BACK.label,\n            order: '1'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_FORWARD.id,\n            label: EditorCommands.GO_FORWARD.label,\n            order: '2'\n        });\n        registry.registerMenuAction(EditorMainMenu.NAVIGATION_GROUP, {\n            commandId: EditorCommands.GO_LAST_EDIT.id,\n            label: nls.localizeByDefault('Last Edit Location'),\n            order: '3'\n        });\n\n        registry.registerSubmenu(EditorMainMenu.PANE_GROUP, nls.localizeByDefault('Switch Group'));\n\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFirstEditorGroup',\n            label: nls.localizeByDefault('Group 1'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusSecondEditorGroup',\n            label: nls.localizeByDefault('Group 2'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusThirdEditorGroup',\n            label: nls.localizeByDefault('Group 3'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFourthEditorGroup',\n            label: nls.localizeByDefault('Group 4'),\n        });\n        registry.registerMenuAction(EditorMainMenu.BY_NUMBER, {\n            commandId: 'workbench.action.focusFifthEditorGroup',\n            label: nls.localizeByDefault('Group 5'),\n        });\n\n        registry.registerMenuAction(EditorMainMenu.NEXT_PREVIOUS, {\n            commandId: CommonCommands.NEXT_TAB_GROUP.id,\n            label: nls.localizeByDefault('Next Group'),\n            order: '1'\n        });\n        registry.registerMenuAction(EditorMainMenu.NEXT_PREVIOUS, {\n            commandId: CommonCommands.PREVIOUS_TAB_GROUP.id,\n            label: nls.localizeByDefault('Previous Group'),\n            order: '2'\n        });\n\n        registry.registerMenuAction(EditorMainMenu.LOCATION_GROUP, {\n            commandId: EditorCommands.GOTO_LINE_COLUMN.id,\n            order: '1'\n        });\n\n        // Toggle Commands.\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_WORD_WRAP.id,\n            order: '0'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_MINIMAP.id,\n            order: '1',\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: CommonCommands.TOGGLE_BREADCRUMBS.id,\n            order: '2',\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_RENDER_WHITESPACE.id,\n            order: '3'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_TOGGLE, {\n            commandId: EditorCommands.TOGGLE_STICKY_SCROLL.id,\n            order: '4'\n        });\n        registry.registerMenuAction(CommonMenus.FILE_CLOSE, {\n            commandId: CommonCommands.CLOSE_MAIN_TAB.id,\n            label: nls.localizeByDefault('Close Editor'),\n            order: '1'\n        });\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_RIGHT.id,\n            label: nls.localizeByDefault('Split Editor Right'),\n            order: '0'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_LEFT.id,\n            label: nls.localizeByDefault('Split Editor Left'),\n            order: '1'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_UP.id,\n            label: nls.localizeByDefault('Split Editor Up'),\n            order: '2'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_SPLIT, {\n            commandId: EditorCommands.SPLIT_EDITOR_DOWN.id,\n            label: nls.localizeByDefault('Split Editor Down'),\n            order: '3'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_ORTHO, {\n            commandId: EditorCommands.SPLIT_EDITOR_HORIZONTAL.id,\n            label: nls.localize('theia/editor/splitHorizontal', 'Split Editor Horizontal'),\n            order: '1'\n        });\n\n        registry.registerMenuAction(CommonMenus.VIEW_EDITOR_SUBMENU_ORTHO, {\n            commandId: EditorCommands.SPLIT_EDITOR_VERTICAL.id,\n            label: nls.localize('theia/editor/splitVertical', 'Split Editor Vertical'),\n            order: '2'\n        });\n\n        registry.registerSubmenu(CommonMenus.VIEW_EDITOR_SUBMENU, nls.localizeByDefault('Editor Layout'));\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema,\n    PreferenceChangeEvent,\n    PreferenceScope,\n} from '@theia/core/lib/browser/preferences';\nimport { PreferenceProxyFactory } from '@theia/core/lib/browser/preferences/injectable-preference-proxy';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { environment } from '@theia/core';\nimport { editorGeneratedPreferenceProperties, GeneratedEditorPreferences } from './editor-generated-preference-schema';\n\n/* eslint-disable @theia/localization-check,max-len,no-null/no-null */\n// #region src/vs/workbench/contrib/codeActions/browser/codeActionsContribution.ts\n\nconst codeActionsContributionSchema: PreferenceSchema['properties'] = {\n    'editor.codeActionsOnSave': {\n        oneOf: [\n            {\n                type: 'object',\n                properties: {\n                    'source.fixAll': {\n                        type: 'boolean',\n                        description: nls.localizeByDefault('Controls whether auto fix action should be run on file save.')\n                    }\n                },\n                additionalProperties: {\n                    type: 'boolean'\n                },\n            },\n            {\n                type: 'array',\n                items: { type: 'string' }\n            }\n        ],\n        default: {},\n        description: nls.localizeByDefault('Code action kinds to be run on save.'),\n        scope: 'language-overridable',\n    }\n};\n\ninterface CodeActionsContributionProperties {\n    'editor.codeActionsOnSave': string[] | ({ 'source.fixAll': boolean } & Record<string, boolean>)\n}\n\n// #endregion\n\n// #region src/vs/workbench/contrib/files/browser/files.contribution.ts\nconst fileContributionSchema: PreferenceSchema['properties'] = {\n    'editor.formatOnSave': {\n        'type': 'boolean',\n        'description': nls.localizeByDefault('Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.'),\n        'scope': PreferenceScope.fromString('language-overridable'),\n    },\n    'editor.formatOnSaveMode': {\n        'type': 'string',\n        'default': 'file',\n        'enum': [\n            'file',\n            'modifications',\n            'modificationsIfAvailable'\n        ],\n        'enumDescriptions': [\n            nls.localizeByDefault('Format the whole file.'),\n            nls.localizeByDefault('Format modifications (requires source control).'),\n            nls.localize('theia/editor/editor.formatOnSaveMode.modificationsIfAvailable', \"Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted.\"),\n        ],\n        'markdownDescription': nls.localizeByDefault('Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.'),\n        'scope': PreferenceScope.fromString('language-overridable'),\n    },\n    // Include this, even though it is not strictly an `editor`preference.\n    'files.eol': {\n        'type': 'string',\n        'enum': [\n            '\\n',\n            '\\r\\n',\n            'auto'\n        ],\n        'enumDescriptions': [\n            nls.localizeByDefault('LF'),\n            nls.localizeByDefault('CRLF'),\n            nls.localizeByDefault('Uses operating system specific end of line character.')\n        ],\n        'default': 'auto',\n        'description': nls.localizeByDefault('The default end of line character.'),\n        'scope': PreferenceScope.fromString('language-overridable')\n    },\n    // We used to call these `editor.autoSave` and `editor.autoSaveDelay`.\n    'files.autoSave': {\n        'type': 'string',\n        'enum': ['off', 'afterDelay', 'onFocusChange', 'onWindowChange'],\n        'markdownEnumDescriptions': [\n            nls.localize('theia/editor/files.autoSave.off', 'An editor with changes is never automatically saved.'),\n            nls.localize('theia/editor/files.autoSave.afterDelay', 'An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.'),\n            nls.localize('theia/editor/files.autoSave.onFocusChange', 'An editor with changes is automatically saved when the editor loses focus.'),\n            nls.localize('theia/editor/files.autoSave.onWindowChange', 'An editor with changes is automatically saved when the window loses focus.')\n        ],\n        'default': environment.electron.is() ? 'off' : 'afterDelay',\n        'markdownDescription': nls.localize('theia/editor/files.autoSave', 'Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.', 'off', 'afterDelay', 'onFocusChange', 'onWindowChange', 'afterDelay')\n    },\n    'files.autoSaveDelay': {\n        'type': 'number',\n        'default': 1000,\n        'minimum': 0,\n        'markdownDescription': nls.localizeByDefault('Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `{0}`.', 'afterDelay')\n    },\n};\n\ninterface FileContributionEditorPreferences {\n    'editor.formatOnSave': boolean;\n    'editor.formatOnSaveMode': 'file' | 'modifications' | 'modificationsIfAvailable';\n    'files.eol': '\\n' | '\\r\\n' | 'auto';\n    'files.autoSave': 'off' | 'afterDelay' | 'onFocusChange' | 'onWindowChange';\n    'files.autoSaveDelay': number;\n}\n// #endregion\n\n// #region src/vs/workbench/contrib/format/browser/formatActionsMultiple.ts\n// This schema depends on a lot of private stuff in the file, so this is a stripped down version.\nconst formatActionsMultipleSchema: PreferenceSchema['properties'] = {\n    'editor.defaultFormatter': {\n        description: nls.localizeByDefault('Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.'),\n        type: ['string', 'null'],\n        default: null,\n    }\n};\ninterface FormatActionsMultipleProperties {\n    'editor.defaultFormatter': string | null;\n}\n// #endregion\n\n// #region Custom Theia extensions to editor preferences\n\nconst theiaEditorSchema: PreferenceSchema['properties'] = {\n    'editor.formatOnSaveTimeout': {\n        'type': 'number',\n        'default': 750,\n        'description': nls.localize('theia/editor/formatOnSaveTimeout', 'Timeout in milliseconds after which the formatting that is run on file save is cancelled.')\n    },\n    'editor.history.persistClosedEditors': {\n        'type': 'boolean',\n        'default': false,\n        'description': nls.localize('theia/editor/persistClosedEditors', 'Controls whether to persist closed editor history for the workspace across window reloads.')\n    },\n};\n\ninterface TheiaEditorProperties {\n    'editor.formatOnSaveTimeout': number;\n    'editor.history.persistClosedEditors': boolean;\n}\n\n// #endregion\n\nconst combinedProperties = {\n    ...editorGeneratedPreferenceProperties,\n    ...codeActionsContributionSchema,\n    ...fileContributionSchema,\n    ...formatActionsMultipleSchema,\n    ...theiaEditorSchema\n};\n\nexport const editorPreferenceSchema: PreferenceSchema = {\n    'type': 'object',\n    'scope': 'resource',\n    'overridable': true,\n    'properties': combinedProperties,\n};\n\nexport interface EditorConfiguration extends GeneratedEditorPreferences,\n    CodeActionsContributionProperties,\n    FileContributionEditorPreferences,\n    FormatActionsMultipleProperties,\n    TheiaEditorProperties { }\n\nexport type EndOfLinePreference = '\\n' | '\\r\\n' | 'auto';\n\nexport type EditorPreferenceChange = PreferenceChangeEvent<EditorConfiguration>;\n\nexport const EditorPreferenceContribution = Symbol('EditorPreferenceContribution');\nexport const EditorPreferences = Symbol('EditorPreferences');\nexport type EditorPreferences = PreferenceProxy<EditorConfiguration>;\n\n/**\n * @deprecated @since 1.23.0\n *\n * By default, editor preferences now use a validated preference proxy created by the PreferenceProxyFactory binding.\n * This function will create an unvalidated preference proxy.\n * See {@link bindEditorPreferences}\n */\nexport function createEditorPreferences(preferences: PreferenceService, schema: PreferenceSchema = editorPreferenceSchema): EditorPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindEditorPreferences(bind: interfaces.Bind): void {\n    bind(EditorPreferences).toDynamicValue(ctx => {\n        const factory = ctx.container.get<PreferenceProxyFactory>(PreferenceProxyFactory);\n        return factory(editorPreferenceSchema);\n    }).inSingletonScope();\n    bind(EditorPreferenceContribution).toConstantValue({ schema: editorPreferenceSchema });\n    bind(PreferenceContribution).toService(EditorPreferenceContribution);\n}\n"],"names":[],"sourceRoot":""}